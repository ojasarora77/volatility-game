/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  114: {
    VolatilityLottery: {
      address: "0x5871286045582C2F98077BFfBE1D76442ECA4389",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_ftsoRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_randomProvider",
              type: "address",
            },
            {
              internalType: "address",
              name: "_fdcHub",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_entryFee",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_volatilityThreshold",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_roundDuration",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_pricePairSymbol",
              type: "string",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "roundId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "winner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "JackpotWinnerSelected",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "roundId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "player",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isHighVolatility",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "PredictionMade",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "roundId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "player",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "RewardClaimed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "roundId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "endPrice",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "volatility",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isHighVolatility",
              type: "bool",
            },
          ],
          name: "RoundFinalized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "roundId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "startPrice",
              type: "uint256",
            },
          ],
          name: "RoundStarted",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_roundId",
              type: "uint256",
            },
          ],
          name: "claimRewards",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "entryFee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "fdcHub",
          outputs: [
            {
              internalType: "contract IFdcHub",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "finalizeRound",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "ftsoRegistry",
          outputs: [
            {
              internalType: "contract IFtsoRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "highVolatilityPlayers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "lowVolatilityPlayers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "_isHighVolatility",
              type: "bool",
            },
          ],
          name: "makePrediction",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "predictions",
          outputs: [
            {
              internalType: "bool",
              name: "isHighVolatility",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "hasClaimed",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pricePairSymbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "randomProvider",
          outputs: [
            {
              internalType: "contract IRandomProvider",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "roundDuration",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "roundId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "rounds",
          outputs: [
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startPrice",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endPrice",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "actualVolatility",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isHighVolatility",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isFinalized",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "totalPot",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "highVolatilityPot",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "lowVolatilityPot",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "jackpotWinner",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "startRound",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "volatilityThreshold",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
